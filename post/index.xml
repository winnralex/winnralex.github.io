<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>https://example.com/post/</link>
      <atom:link href="https://example.com/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 08 Apr 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://example.com/post/</link>
    </image>
    
    <item>
      <title>Как я провел прошлую неделю.</title>
      <link>https://example.com/post/last-week/</link>
      <pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/last-week/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;На прошедшей неделе в моей жизни произошло несколько интересных событий:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Я сделал лабораторную работу номер 9 по операционным системам.&lt;/li&gt;
&lt;li&gt;Я сыграл в баскетбольном матче за сборную РУДН.&lt;/li&gt;
&lt;li&gt;Я написал контрольную работу по математической логике.&lt;/li&gt;
&lt;li&gt;Я решил множество задач по математическому анализу и другим предметам.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Язык разметки Markdown.</title>
      <link>https://example.com/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/</link>
      <pubDate>Sat, 08 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/%D1%8F%D0%B7%D1%8B%D0%BA-%D1%80%D0%B0%D0%B7%D0%BC%D0%B5%D1%82%D0%BA%D0%B8-markdown/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Markdown, или маркдаун, — это язык разметки для текстовых документов. Он позволяет создавать тексты без использования Word и других редакторов. Разметку можно прочитать и воспроизвести в любой системе или браузере.
Маркдаун создал писатель и блогер Джон Грубер вместе с веб-активистом Аароном Шварцем. Они хотели придумать максимально простой и удобный язык разметки, с помощью которого текст можно перевести в красиво оформленный вид. При этом текст обязан оставаться читаемым даже без приведения к «красивому» виду. Таким и оказался Markdown. Его создали в 2004 году, но наибольшую популярность язык получил сейчас. Его поддерживают разнообразные платформы для блогов, сервисы создания заметок, CMS и даже мессенджеры. Поэтому маркдаун полезно знать всем, кто имеет дело с вебом, от разработчиков до блогеров.
Человек пишет текст в любом редакторе и добавляет в него специальные комбинации стандартных символов. Это разметка, она показывает, где текст должен быть жирным, где — заголовком, а в каком месте нужен список. С помощью символов можно разметить заголовки, выделения текста и даже сложные конструкции вроде таблиц. Специальные преобразователи формируют на основе разметки готовый документ. Это похоже на использование HTML, но маркдаун проще, текст в нем более читаемый. Преобразователи или изначально есть в текстовом редакторе, например в приложении для заметок, или скачиваются отдельно.&lt;/p&gt;
&lt;h2 id=&#34;кто-пользуется-маркдауном&#34;&gt;Кто пользуется маркдауном&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Пользователи интернета, которые общаются в мессенджерах и пишут заметки в сервисах, поддерживающих разметку.
Разработчики, которые пишут с помощью маркдауна документацию для проектов, — им нужен простой и надежный инструмент.
Контент-менеджеры при наполнении сайтов, которые поддерживают маркдаун. Разметка может использоваться и на веб-страницах.
Блогеры, пишущие лонгриды, когда оформляют материалы для статей. Многие платформы для написания текстов поддерживают маркдаун, например Notion.
Писатели и копирайтеры, которым нужен простой инструмент для оформления текста — разметка, читаемая с любого устройства.
Энтузиасты, которые пользуются разметкой в личных целях: пишут заметки и списки дел, ведут дневники или составляют карточки для запоминания.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;для-чего-нужен-маркдаун&#34;&gt;Для чего нужен маркдаун&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;Быстрое форматирование статьи для перевода в PDF или чтобы она просто выглядела красиво без лишних усилий.
Верстка текстового документа для размещения на сайте, но без применения HTML.
Написание документации для кода.
Составление заметок в личном цифровом блокноте.
Написание красивых сообщений в мессенджерах.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;правила-разметки&#34;&gt;Правила разметки&lt;/h2&gt;
&lt;p&gt;Основной синтаксис. Он очень простой: текст «оборачивается» в символы или они ставятся перед строкой. Вот так, например, будут выглядеть заголовки.&lt;/p&gt;
&lt;p&gt;· # Заголовок H1 (первого уровня, например название текста)&lt;/p&gt;
&lt;p&gt;· ## Заголовок H2 (второго уровня, заголовки)&lt;/p&gt;
&lt;p&gt;· ### Заголовок H3 (третьего уровня, промежуточные подзаголовки)&lt;/p&gt;
&lt;p&gt;И так далее, вплоть до заголовков шестого уровня с шестью решетками перед строкой. На практике подзаголовки ниже H3 практически не используют.&lt;/p&gt;
&lt;p&gt;В маркдауне можно применить базовое форматирование текста. Буквицу или рукописный шрифт вставить не получится, но выделить важные участки — легко.&lt;/p&gt;
&lt;p&gt;· &lt;em&gt;Курсив&lt;/em&gt; или &lt;em&gt;курсив&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;· &lt;strong&gt;Жирный текст&lt;/strong&gt; или &lt;strong&gt;жирный текст&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;· &lt;em&gt;&lt;strong&gt;Жирный и подчеркнутый текст&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;· &amp;gt; Цитата (угловая скобка ставится перед каждой строкой цитаты)&lt;/p&gt;
&lt;p&gt;· — Пункт маркированного списка&lt;/p&gt;
&lt;p&gt;· 1. Первый пункт нумерованного списка&lt;/p&gt;
&lt;p&gt;· 2. Второй пункт нумерованного списка (и так далее)&lt;/p&gt;
&lt;p&gt;Вставка материалов. Разметка позволяет вставлять в текст разные элементы: ссылки и изображения, которые потом «подтянутся» в документ, когда применится форматирование.&lt;/p&gt;
&lt;p&gt;· [текст_ссылки](любая ссылка) для вставки ссылок&lt;/p&gt;
&lt;p&gt;· [подпись к картинке](ссылка на картинку) для вставки картинок в текст&lt;/p&gt;
&lt;p&gt;· ***, — или ___ — горизонтальная линия на всю строку, которая отделяет часть текста от другой&lt;/p&gt;
&lt;p&gt;А если в тексте должна быть звездочка или любой другой «специальный» символ, который можно прочесть не так, перед ней надо поставить обратный слэш. Например, вот так: *. Тогда символ отобразится в тексте как надо и не считается как правило разметки.&lt;/p&gt;
&lt;p&gt;Расширенный синтаксис. Существует расширенная версия маркдауна. Она называется GFM, GitHub Flavored Markdown. В ней есть другие интересные возможности, например, &lt;del&gt;зачеркнутый текст&lt;/del&gt;, обернутый в две тильды, или &lt;code&gt;короткий кусок кода&lt;/code&gt;. Многострочный блок кода оборачивается в три грависа над верхней и под нижней строкой. Вот так:&lt;/p&gt;
&lt;p&gt;«`&lt;/p&gt;
&lt;p&gt;Здесь будет строка кода.&lt;/p&gt;
&lt;p&gt;И здесь тоже.&lt;/p&gt;
&lt;p&gt;«`&lt;/p&gt;
&lt;p&gt;Можно создавать таблицы, построенные на символах вертикальной и горизонтальной черты. Или «списки дел»:&lt;/p&gt;
&lt;p&gt;— [X] Выполненное дело&lt;/p&gt;
&lt;p&gt;— [ ] Невыполненное дело&lt;/p&gt;
&lt;p&gt;Если редактор поддерживает GFM, то все подобные элементы синтаксиса тоже преобразуются и будут выглядеть как на веб-странице. В нем есть даже эмодзи: нужно просто вставить в текст код нужного смайла, обернутый в двоеточия. Примерно так: 😄. Коды эмодзи есть в открытом доступе, их можно посмотреть в интернете.&lt;/p&gt;
&lt;h2 id=&#34;как-начать-работать-с-маркдауном&#34;&gt;Как начать работать с маркдауном&lt;/h2&gt;
&lt;p&gt;Все очень просто: нужно установить или открыть любой редактор, который поддерживает эту разметку, и начать писать. Есть локальные редакторы, их надо скачивать, а есть те, что работают в браузере через интернет, как веб-сервис. Выбирайте любой, настраивайте под свои нужды и начинайте. Синтаксис простой, его легко выучить. Может быть даже так, что вы уже частично им пользуетесь: например, в мессенджере Telegram для форматирования текста используется именно маркдаун.&lt;/p&gt;
&lt;p&gt;Если вы хотите пользоваться маркдауном не для личных заметок, а для оформления текста в блоге или на сайте, нужно подключить к ним плагин с поддержкой Markdown. Это тоже несложно, такие плагины существуют для многих CMS.&lt;/p&gt;
&lt;p&gt;Маркдаун пригодится и тем, кто планирует карьеру разработчика. Он нужен в контенте, в веб-программировании, в написании документации.
Источник: &lt;a href=&#34;https://blog.skillfactory.ru/glossary/markdown/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.skillfactory.ru/glossary/markdown/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Как я провел прошлую неделю.</title>
      <link>https://example.com/post/getting-started/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;На прошедшей неделе в моей жизни произошло несколько интересных событий:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Я сделал лабораторную работы номер 5 по операционным системам.&lt;/li&gt;
&lt;li&gt;Я сыграл в баскетбольном матче за сборную Университета.&lt;/li&gt;
&lt;li&gt;Я посетил научную выставку.&lt;/li&gt;
&lt;li&gt;Я решил множество задач по математическому анализу и другим предметам.&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git.</title>
      <link>https://example.com/post/jupyter/</link>
      <pubDate>Fri, 17 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/jupyter/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Что такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.&lt;/p&gt;
&lt;p&gt;Если вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее VCS) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование VCS также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.
Многие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.
Для того, чтобы решить эту проблему, программисты давным-давно разработали локальные VCS с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.
Одной из популярных VCS была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.
Следующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (Centralized Version Control System, далее CVCS). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение CVCS являлось стандартом на протяжении многих лет.&lt;/p&gt;
&lt;p&gt;Такой подход имеет множество преимуществ, особенно перед локальными VCS. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать CVCS, чем оперировать локальными базами данных на каждом клиенте.&lt;/p&gt;
&lt;p&gt;Несмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные VCS страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.
Здесь в игру вступают распределённые системы контроля версий (Distributed Version Control System, далее DVCS). В DVCS (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
